stages:
  - build
  - lint
  - sast

dev_vars:
  stage: .pre
  script:
    - |
      cat > .env-ci << EOF
      ENV_TARGET=dev
      EOF
  artifacts:
    expire_in: 1h
    paths:
      - .env-ci
  rules:
    - if: ($CI_COMMIT_BRANCH != "master" && $CI_COMMIT_BRANCH != "staging")
  tags:
    - securd_frontend

staging_vars:
  stage: .pre
  script:
    - |
      cat > .env-ci << EOF
      ENV_TARGET=staging
      EOF
  artifacts:
    expire_in: 1h
    paths:
      - .env-ci
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
  tags:
    - securd_frontend

prod_vars:
  stage: .pre
  script:
    - |
      cat > .env-ci << EOF
      ENV_TARGET=prod
      EOF
  artifacts:
    expire_in: 1h
    paths:
      - .env-ci
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  tags:
    - securd_frontend

build:
  stage: build
  image: node:latest
  before_script:
    - source .env-ci
    - npm ci
  script:
    - npm run build:$ENV_TARGET
  allow_failure: false
  artifacts:
    expire_in: 1h
    paths:
      - .next
      - node_modules
  tags:
    - securd_frontend

lint:
  stage: lint
  image: node:latest
  script:
    - npm run lint
  allow_failure: false
  needs:
    - job: build
      artifacts: true
  tags:
    - securd_frontend

sast:
  stage: sast
  include:
    - template: Security/SAST.gitlab-ci.yml